function [reducedColorImg,reducedEnergyImg] = decrease_width(im,energyImg)
%DECREASE_WIDTH Summary of this function goes here
%   Detailed explanation goes here
[m,n,d] = size(im);
reducedColorImg = uint8(zeros(m, n, d));
reducedEnergyImg = double(zeros(m, n));

cumulativeEnergyMap = cumulative_min_energy_map(im, 'VERTICAL');
seam = find_vertical_seam(cumulativeEnergyMap);

for i=1:m
      if seam(i) == 1
          reducedColorImg(i,:,1) = im(i, seam(i)+1, 1);
          reducedColorImg(i,:,2) = im(i, seam(i)+1, 2);
          reducedColorImg(i,:,3) = im(i, seam(i)+1, 3);
          reducedEnergyImg(i,:) = energyImg(i, seam(i)+1);
      elseif seam(i) == n
          reducedColorImg(i,:,1) = im(i, seam(i)-1, 1);
          reducedColorImg(i,:,2) = im(i, seam(i)-1, 2);
          reducedColorImg(i,:,3) = im(i, seam(i)-1, 3);
          reducedEnergyImg(i,:) = energyImg(i, seam(i)-1); 
      else
          reducedColorImg(i,:,1) = im(i, [1:seam(i)-1 seam(i)+1],1);
          reducedColorImg(i,:,2) = im(i, [1:seam(i)-1 seam(i)+1],2);
          reducedColorImg(i,:,3) = im(i, [1:seam(i)-1 seam(i)+1],3);
          reducedEnergyImg(i,:) = energyImg(i, [1:seam(i)-1 seam(i)+1]);
      end
end  
    
end


